# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push
# release:
#   types: [published]
#Workflows are not triggered for the created, edited, or deleted activity types for draft releases.
#When you create your release through the GitHub browser UI, your release may automatically be saved as a draft.

env:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--strict-checksums --threads 4C --batch-mode"

jobs:

  build:
    runs-on: ubuntu-latest        
    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: '8'
          maven-version: '3.8.3'
      - name: Build with Maven
        run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS compile
  Checkstyle:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: '8'
          maven-version: '3.8.3'
      - name: Checkstyle
        run: mvn -e $MAVEN_CLI_OPTS $MAVEN_OPTS org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:checkstyle
      - name: Checkstyle-artifact
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: checkstyle-result.xml
          path: target/checkstyle-result.xml
  Spotbugs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: '8'
          maven-version: '3.8.3'
      - name: Spotbugs
        run:  mvn $MAVEN_CLI_OPTS $MAVEN_OPTS compile com.github.spotbugs:spotbugs-maven-plugin:4.0.4:spotbugs
      - name: Spotbugs-artifact
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: spotbugs-result.xml
          path: target/spotbugs-result.xml
  Tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: '17'
          maven-version: '3.8.3'
      - name: Unit Test
        run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS test -P unit-test
      - name: Integration Test
        run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS test -P integration-test
      - name: Create Unit Test Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Unit Test Report
          path: target/surefire-reports/*unit*.txt
      - name: Create Integration Test Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Integration Test Report
          path: target/surefire-reports/*integration*.txt
  Package:
    runs-on: ubuntu-latest
    needs: Tests
    steps:
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: '17'
          maven-version: '3.8.3'
      - name: Package
        run: mvn $MAVEN_CLI_OPTS $MAVEN_OPTS -D skipTests clean package
      - name: Create Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: UninaTestPipeline-1.0-SNAPSHOT.jar
          path: target/*.jar
  CreateBadges:
    runs-on: ubuntu-latest
    env:
      NumberOfTest: 0
      TestResult: failed
      UnitTestResult: failed
      IntegrationTestResult: failed
      NumberOfUnitTest: 0
      NumberOfIntegrationTest: 0
    needs: Package
    steps:
      - name: Download Integration Test Report
        uses: actions/download-artifact@v3
        with:
          name: Integration Test Report
      - name: Download Unit Test Report
        uses: actions/download-artifact@v3
        with:
          name: Unit Test Report
      - name: Retrieve Tests Data
        run: |
          echo "NumberOfIntegrationTest=$(grep -o -w "Tests run: [0-9]*" *integration*.txt | cut -d' ' -f 3)" >> $GITHUB_ENV
          echo "NumberOfUnitTest=$(grep -o -w "Tests run: [0-9]*" *unit*.txt | cut -d' ' -f 3)" >> $GITHUB_ENV
      - name: Check
        run: |
          echo "NumberOfTest= $(($NumberOfIntegrationTest + $NumberOfUnitTest))" >> $GITHUB_ENV
          echo $NumberOfUnitTest
          echo $NumberOfIntegrationTest
      - name: Check2
        run: echo $NumberOfTest


# grep -o -w "Tests run: [0-9]*" *SignatureBuilderTest.txt | cut -d' ' -f 3